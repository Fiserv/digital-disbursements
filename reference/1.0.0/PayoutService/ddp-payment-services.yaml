#-------------------------------------
# Initial Version
# Added nickname
# Added Reversal Code for ACH reversal
# Added Paypal source seperated from Venmo
#-------------------------------------
openapi: 3.0.0
info:
  version: 0.0.3
  title: Digital Disbursement Platform Payment APIs
  description: This Specification document list the APIs required for making a Disbursement initialization/payemnt.

servers:
  - url:  https://qa.api.firstdata.com
    description: This url is for QA testing.
  - url:  https://int.api.firstdata.com
    description: This url is for customer testing.
  - url: https://prod.api.firstdata.com
    description: This is production url.

paths:
  /ddp/v1/payments:
    post:
      x-group-name: Payment
      x-proxy-name: Create
      x-child-product-name: PayoutService
      tags:
        - Digital Disbursement Platform Payment APIs
      description: This API can be use for disbursement of fund to individual of company recipeint.
        1. Payment Initialization - Collects the payment, recipeint and other details for payment initialization. Merchant can initialize the transaction, platform will send notification to recipeint and recipient must have come to recipient portal to collect the money by providing the payout information.
        2. Payment Disbursement - Collects the payment, recipient and payout information. In this scenario, in this scenatio, platforrm will take care of sending money to recipeint using funding methods provided.
      parameters:
        - in: header
          name: Api-Key
          description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
          required: true
          schema:
            type: string
        - in: header
          name: Timestamp
          description: Epoch timestamp in the request initiating system
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: Authorization information for the request. Format- `HMAC {hmacToken}`
          required: true
          schema:
            type: string
        - in: header
          name: X-Access-Token
          description: Token provided by DDP along with public key /tokens API. This is required for encrypted PCI data vaulting. This is to identify public key associated with access token to decrypt the PCI data.
          required: false
          schema:
            type: string
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
          required: true
          schema:
            type: string

      requestBody:
        description: Details required for provision a PAN data.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisbursementRequest'
      responses:
        '201':
          description: Initialization response - Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisbursementResponse'
        '400':
          description: Initialization response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Initialization response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Initialization response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /ddp/v1/payments/{id}/cancel:
    patch:
      x-group-name: Payment
      x-proxy-name: Cancel
      x-child-product-name: PayoutService
      tags:
        - Digital Disbursement Platform Payment APIs
      description: This API is to cancel the transaction using transaction Id, only in case money is not disburse and in Initialization status. In case of ACH, cancelation can be done untill payment went out to backend payment processing engine. This should be used in case of multi recipeint transaction.
      parameters:
        - in: header
          name: Api-Key
          description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
          required: true
          schema:
            type: string
        - in: header
          name: Timestamp
          description: Epoch timestamp in the request initiating system
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: Authorization information for the request. Format- `HMAC {hmacToken}`
          required: true
          schema:
            type: string
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
          required: true
          schema:
            type: string
        - in: path
          name: id
          description: when called by merchant value can be 1. Transaction Id genearetd at the time of payment initialization 2. Merchant provided reference Number. when called by recipient, value can be 1. payment Id Id genearetd at the time of payment initialization
          required: true
          schema:
            type: string

      requestBody:
        description: Details required for disbursement request.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelRequest'

      responses:
        '200':
          description: provision response - Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelResponse'
        '400':
          description:  Initialization cancel response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Initialization cancel response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Initialization cancel response - not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Initialization cancel response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /ddp/v1/payments/{id}/approve:
    patch:
      x-group-name: Payment
      x-proxy-name: Approve
      x-child-product-name: PayoutService
      tags:
        - Digital Disbursement Platform Payment APIs
      description: This API is to approve the transaction using transaction Id, only in case money is not disburse and in Initialization status. In case of ACH, cancelation can be done untill payment went out to backend payment processing engine. This should be used in case of multi recipeint transaction.
      parameters:
        - in: header
          name: Api-Key
          description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
          required: true
          schema:
            type: string
        - in: header
          name: Timestamp
          description: Epoch timestamp in the request initiating system
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: Authorization information for the request. Format- `HMAC {hmacToken}`
          required: true
          schema:
            type: string
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
          required: true
          schema:
            type: string
        - in: path
          name: id
          description: This is transaction Id provided at the time of payment initialization.
          required: true
          schema:
            type: string

      requestBody:
        description: Details required for disbursement request.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveRequest'

      responses:
        '200':
          description: provision response - Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContent'
        '400':
          description:  Initialization cancel response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Initialization cancel response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Initialization cancel response - not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Initialization cancel response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /ddp/v1/payments/{id}/disburse:
    patch:
      x-group-name: Payment
      x-proxy-name: Disburse
      x-child-product-name: PayoutService
      tags:
        - Digital Disbursement Platform Payment APIs
      description: This API collects the payment and other details for payment disbursement. This will be used by recipient to accept the money by providing funding information.
      parameters:
        - in: header
          name: Api-Key
          description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
          required: true
          schema:
            type: string
        - in: header
          name: Timestamp
          description: Epoch timestamp in the request initiating system
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: Authorization information for the request. Format- `HMAC {hmacToken}`
          required: true
          schema:
            type: string
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
          required: true
          schema:
            type: string
        - in: header
          name: X-Access-Token
          description: Token provided by DDP along with public key /tokens API. This is required for encrypted PCI data vaulting. This is to identify public key associated with access token to decrypt the PCI data.
          required: false
          schema:
            type: string
        - in: path
          name: id
          description: Id genearetd at the time of payment request initialization. This is paymentId.
          required: true
          schema:
            type: string

      requestBody:
        description: Details required for disbursement request.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisbursementRequest'
      responses:
        '201':
          description: Disbursement response - Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisbursementResponse'
        '400':
          description: Disbursement response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Disbursement response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Disbursement response - not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Disbursement response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /ddp/v1/payments/{id}/methods:
    get:
      x-group-name: Payment
      x-proxy-name: Payment Methods
      x-child-product-name: PayoutService
      tags:
        - Digital Disbursement Platform Payment APIs
      description: This API returns all the different payment methods a merchant is subscribed and fee associated with those methods.
      parameters:
        - in: header
          name: Api-Key
          description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
          required: true
          schema:
            type: string
        - in: header
          name: Timestamp
          description: Epoch timestamp in the request initiating system
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: Authorization information for the request. Format- `HMAC {hmacToken}`
          required: true
          schema:
            type: string
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
          required: true
          schema:
            type: string
        - in: path
          name: id
          description:  TransactionId/merchantTransactionId associated with a transaction.
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Transactions response - Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsResponse'
        '400':
          description:  Transactions response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Transactions response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Transactions response - Recipient not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Transactions response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
components:
  schemas:
##-------------------------------------
## Response Model
##-------------------------------------
    AuthRequest:
      description: This Request model is for Auth Request.
      type: object
      required:
       - recipientId
       - transactionId
       - authCode
      properties:
        transactionId:
            $ref: '#/components/schemas/TransactionId'
        recipientId:
            $ref: '#/components/schemas/RecipientId'
        authCode:
          description: authCode, provided by merchant at the time of payment initialization. Recipient should enter the same auth code to validate the transaction.
          type: string


    DisbursementRequest:
      title: Initialization request object model.
      type: object
      required:
        - amount
        - recipient
        - merchantTransactionId
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        recipient:
          type: array
          minItems: 1
          items:
              $ref: '#/components/schemas/RecipientInfo'
        merchantTransactionId:
          description: Provided by merchant and must be associated with transaction Id.
          type: string
          example: "MERCHNAT_INPUT"
          writeOnly: true
        batchNumber:
          description: Provided by FED to merchant.
          type: string
          example: "MERCHNAT_INPUT"
          writeOnly: true
        applyDate:
          description: The date payment should be initialized.
          type: string
          example: "04/03/2021"
        device:
          $ref: '#/components/schemas/DeviceInfo'
        customFields:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true

    DisbursementResponse:
      description: Model for events that are published when triggered in the system, or as part of a process like a transaction.
      type: object
      required:
      - transactionId
      - created
      - recipient
      - transactionStatus
      - merchantTransactionId
      properties:
       amount:
        $ref: '#/components/schemas/Amount'
       transactionId:
         description: Uniquely identifies an event and related message.
         type: string
         readOnly: true
         example: "c2RnYXJ0aHR3ZXN3eXNkVVC"
       merchantTransactionId:
          $ref: '#/components/schemas/MerchantTransactionId'
       portalUrl:
          description: Portal notification URL.
          type: string
          example: " https://recipientportal.com/NjMzYzZjNmMtOWZiOC00N2MxLTkxMmYtYjgzMjFhYTZmMjMyI1RJRC04MzQ5YTBmOS00MTg2LTRkMTYtOTc5ZS1mMTQ3MTdlZTA1MzYrOGE3ZmZmZDA3NDY4NmYxZTAxNzQ2OGJiYTgxMjAwMDA="
       batchNumber:
          description: Provided by FED to merchant.
          type: string
          example: "c2RnYXJ0aHR3ZXN3eXNkVVC"
          writeOnly: true
       created:
         description: Epoch timestamp in the initiating system for the event
         type: number
         example: 1501725477
       recipient:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/PaymentRespsone'
       transactionStatus:
           $ref: '#/components/schemas/TransactionStatus'


    ApproveRequest:
      title: Approve transaction request model
      type: object
      required:
       - paymentId
      properties:
        paymentId:
          $ref: '#/components/schemas/PaymentId'

    CancelRequest:
      title: Cancel transaction request model
      type: object
      required:
       - description
      properties:
        description:
            $ref: '#/components/schemas/Description'
        paymentStatus:
            $ref: '#/components/schemas/PaymentStatus'
        reversalReason:
          description: This is to indicate the Reversal Reason. As of now applied only for ACH transactions.
          type: string
          example: "Unintended recipient"
          maxLength: 75

    CancelResponse:
      title: Void respsone object model
      type: object
      required:
       - TransactionId
       - TransactionStatus
      properties:
        transactionId:
            $ref: '#/components/schemas/TransactionId'
        paymentId:
            $ref: '#/components/schemas/PaymentId'
        transactionStatus:
            $ref: '#/components/schemas/TransactionStatus'

    PaymentMethodsResponse:
      title: Payment Methods Response model
      type: object
      properties:
       methods:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Methods'
##-------------------------------------
## Object Model
##------------------------------------
    Amount:
      description: Information about an ACH account
      type: object
      required:
      - total
      - currency
      properties:
        total:
          description: Indicates total amount
          type: number
          example: 100.00
        currency:
          description: Indicates currency code for total amount
          type: string
          example: "USD"

    ACH:
      description: Information about an ACH account
      type: object
      required:
      - accountNumber
      - routingNumber
      - type
      properties:
        accountNumber:
          type: string
          description: Unique number identifying the ACH account provided by Financial institution.
          example: '92658250156'
        routingNumber:
          type: string
          description: Number to identify the financial institution
          example: '999999999'
        type:
          $ref: '#/components/schemas/AccountType'
        token:
            $ref: '#/components/schemas/ReferenceToken'
        nickName:
          type: string
          description: Nick name provided by the recipient for the Card.
          example: 'John'
        default:
          type: boolean
          description: This is to identify if the payment methods should be set as default payment method for recipient.

    Address:
      description: A physical mailing address for this card holder.
      type: object
      required:
      - type
      - street
      - houseNumberOrName
      - city
      - stateOrProvince
      - postalCode
      - country
      properties:
        type:
          description: Canonical type values of "work", "home", "billing" and "other".
          type: string
        houseNumberOrName:
          description: Housse number or name of the address
          type: string
        street:
          description: The full street address component, which may include house number, street name, P.O. box, and multi-line extended street address information.
          type: string
        city:
          description: The city or locality component.
          type: string
        stateOrProvince:
          description: The state or region component.
          type: string
        postalCode:
          description: The zip code or postal code component.
          type: string
        country:
          description: The country name component.  When specified, the value MUST be in ISO 3166-1 "alpha-2" code format; e.g., the United States and Sweden are "US" and "SE", respectively.
          type: string
        formatted:
          description: The full mailing address, formatted for display or use with a mailing label.
          type: string
        primary:
          description: Indicates if this is the default address for the associated resource. It only has meaning when used in a set or array of addresses.
          type: boolean
      example:
        type: "work"
        street: "100 Universal City Plaza"
        city: "Hollywood"
        stateOrProvince: "CA"
        postalCode: "91608"
        country: "US"
        formatted: "100 Universal City Plaza\nHollywood, CA 91608 US"
        primary: true

    Card:
      description: Information on a credit account
      type: object
      required:
      - cardNumber
      - expiryDate
      properties:
        cardNumber:
          description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          type: string
          example: "4111111111111111"
        nameOnCard:
          description: Name as printed on physical card or on virtual account
          type: string
          example: "John Smith"
        alias:
          description: Last four values of the cardNumber
          type: string
          readOnly: true
          example: "1111"
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        token:
            $ref: '#/components/schemas/ReferenceToken'
        nickName:
          type: string
          description: Nick name provided by the recipient for the Card.
          example: 'John'
        default:
          type: boolean
          description: This is to identify if the payment methods should be set as default payment method for recipient.

    Email:
      description: (Request Only) Email address for the user.
      type: object
      required:
      - value
      properties:
        type:
          description: The "type" sub-attribute is used to provide a classification meaningful to the (human) user.  The user interface should encourage the use of basic values of "work", "home", and "other" and MAY allow additional type values to be used at the discretion of the service client.
          type: string
          writeOnly: true
        value:
          description: The value SHOULD be specified according to RFC5321.
          type: string
          writeOnly: true
        primary:
          description:
            Defines if this entry is to be used as the primary or default for the
            user.
          type: boolean
          default: false
          writeOnly: true
      example:
        value: bjensen@example.com
        type: work
        primary: true

    Link:
      description: Model to communicate linked resources. In this scenario, payment url per recipeint should be returned.
      type: object
      required:
        - href
        - method
      properties:
        href:
          description: URL to linked resource.
          type: string
          format: uri
          example: https://www.example.com/payments/12345/disburse
        rel:
          description: Defines the type of link relationship to current resource.
          type: string
          enum:
            - current.page
            - previous.page
            - next.page
            - self
          example:
            "self"
        method:
          description: Defines the HTTP method for the given href.
          type: string
          default: "GET"
          example:
            "GET"

    Methods:
      description: payment method type and fee.
      type: object
      required:
        - paymentType
      properties:
        source:
          $ref: '#/components/schemas/FundingSourceType'
        fee:
          $ref: '#/components/schemas/Amount'

    PaymentInfo:
      description: Details about recipient and amount associated with the recipient.
      type: object
      required:
        - paymentType
      properties:
        paymentId:
          $ref: '#/components/schemas/PaymentId'
        amount:
          $ref: '#/components/schemas/Amount'
        fee:
          $ref: '#/components/schemas/Amount'
        paymentType:
          description: Type of disbursement - wages, claims, promotions, loans, refund etc
          example: "wages"
          type: string
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatus'


    RecipientInfo:
      description: Details about recipient and amount associated with the recipient.
      type: object
      required:
        - recipientProfileInfo
        - payments
      properties:
        recipientProfileInfo:
            $ref: '#/components/schemas/RecipientProfileInfo'
        description:
            $ref: '#/components/schemas/Description'
        payments:
            $ref: '#/components/schemas/PaymentInfo'
        source:
            $ref: '#/components/schemas/FundingSourceType'
        card:
            $ref: '#/components/schemas/Card'
        ach:
            $ref: '#/components/schemas/ACH'
        prepaid:
            $ref: '#/components/schemas/Prepaid'
        venmo:
            $ref: '#/components/schemas/Venmo'
        paypal:
            $ref: '#/components/schemas/Paypal'
        echeck:
            $ref: '#/components/schemas/ECheck'

    RecipientProfileInfo:
      description: This Request model is for Recipient Profile information
      type: object
      required:
       - recipientType
       - firstName
       - lastName
       - emailAddress
       - DateOfBirth/TIN
       - merchantCustomerId/recipientId
       - address
      properties:
        recipientType:
          $ref: '#/components/schemas/RecipientType'
        recipientId:
          $ref: '#/components/schemas/RecipientId'
        merchantCustomerId:
           $ref: '#/components/schemas/MerchantCustomerId'
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        dateOfBirth:
          $ref: '#/components/schemas/DateOfBirth'
        tin:
          $ref: '#/components/schemas/TIN'
        emailAddress:
           $ref: '#/components/schemas/Email'
        phoneNumber:
          $ref: '#/components/schemas/Phone'
        recipientIdentifier:
          $ref: '#/components/schemas/RecipientIdentifier'
        recipientIdentifierValue:
          $ref: '#/components/schemas/RecipientIdentifierValue'
        status:
          $ref: '#/components/schemas/RecipientStatus'
        reason:
          $ref: '#/components/schemas/Reason'
        guest:
          $ref: '#/components/schemas/Guest'
        address:
          $ref: '#/components/schemas/Address'
        doingBusinessAs:
          $ref: '#/components/schemas/DoingBusinessAs'
        description:
          $ref: '#/components/schemas/Comments'
        ceatedBy:
          $ref: '#/components/schemas/CreatedBy'
        updatedBy:
          $ref: '#/components/schemas/UpdatedBy'

    PaymentRespsone:
      description: Details about notfication message.
      type: object
      required:
        - merchantCustomerId
        - recipientId
        - merchantTransactionId
        - payments
      properties:
        merchantCustomerId:
            $ref: '#/components/schemas/MerchantCustomerId'
        recipientId:
          $ref: '#/components/schemas/RecipientId'
        accountId:
          $ref: '#/components/schemas/AccountId'
        payments:
            $ref: '#/components/schemas/PaymentInfo'
        source:
            $ref: '#/components/schemas/FundingSourceType'
        portalUrl:
          description: Portal notification URL.
          type: string
          example: " https://recipientportal.com/NjMzYzZjNmMtOWZiOC00N2MxLTkxMmYtYjgzMjFhYTZmMjMyI1RJRC04MzQ5YTBmOS00MTg2LTRkMTYtOTc5ZS1mMTQ3MTdlZTA1MzYrOGE3ZmZmZDA3NDY4NmYxZTAxNzQ2OGJiYTgxMjAwMDA="

        alias:
          description: Last four values of the cardNumber/account#
          type: string
          readOnly: true
          example: "xxxx"
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'


    ExpiryDate:
      description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.
      type: object
      required:
      - month
      - year
      properties:
        month:
          type: string
          description: Month format 'MM'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
          example: "09"
        year:
          type: string
          description: Year format 'YY'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
          example: "20"
        singleValue:
          type: string
          description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
          minLength: 4
          maxLength: 6
          readOnly: true

    NVP:
      title: Name and Value pair.
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        valueAsList:
          type: array
          minItems: 0
          items:
            type: string


    Prepaid:
      description: Prepaid Money Network account information.
      type: object
      properties:
        cardNumber:
          description: Prepaid card number.
          type: string
          example: "6759-6498-2643-0010"
        accountNumber:
          description: Prepaid card number.
          type: string
          example: "4226-4982-6438-0010"
        token:
            $ref: '#/components/schemas/ReferenceToken'
        nickName:
          type: string
          description: Nick name provided by the recipient for the Card.
          example: 'John'
        default:
          type: boolean
          description: This is to identify if the payment methods should be set as default payment method for recipient.

    Phone:
      description: Phone number for the user.
      type: object
      required:
      - countryCode
      - value
      properties:
        countryCode:
          description: Country code for the phone number.
          type: string
        value:
          description: The value SHOULD be specified according to the format defined in RFC3966, e.g., 'tel:+1-201-555-0123'.
          type: string
        type:
          description: Often has typical values of "work","billing", "home", "mobile", "fax", "pager", and "other" and MAY allow more types to be defined by the service client.
          type: string
        extension:
          description: Defines the extension of the phone number.
          type: string
      example:
        code: +91
        value: 704-884-2754
        type: billing
        extension: "2145"

    ReferenceToken:
      description: Surrogate value used to represent a handle to an account without sharing PCI/PII data to look it up.
      type: object
      required:
      - tokenId
      - tokenProvider
      properties:
        tokenId:
          description: Actual token value
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        tokenProvider:
          $ref: '#/components/schemas/TokenProvider'
        tspId:
          $ref: '#/components/schemas/TSPID'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'

    Venmo:
      description: Information about a Venmo account.
      type: object
      properties:
        phone:
          $ref: '#/components/schemas/Phone'

    Paypal:
      description: Information about a Paypal account.
      type: object
      properties:
        phone:
          $ref: '#/components/schemas/Phone'
        paypalPayerId:
          type: string
          description: The encrypted PayPal account number.
        emailAddress:
           $ref: '#/components/schemas/Email'
    ECheck:
      description: Information about the eCheck
      type: object
      required:
        - recipient
        - name
      properties:
        email:
          $ref: '#/components/schemas/Email'
        name:
          type: string
          description: Name of the recipient
          example: "FirstName LastName "


    MerchantCustomerId:
      description: This is provided by merchant at the time of payment initialization. This must be associated with recipient.
      type: string
      example: vendorId-0987613457398475

    MerchantTransactionId:
      description: This is provided by merchant at the time of payment initialization.
      type: string
      example: vendorId-0987613457398475

    RecipientId:
      title: Fiserv generated Id at the time of recipient onboarding.
      description: RecipientId, generated at the time of recipient onboarding.
      type: string
      readOnly: true
      example: recipientId-0987613457398475

    Description:
      description: Decription provided at the time of initialization by the merchant.
      type: string
      example: "MERCHNAT_INPUT"
      writeOnly: true
      minimum: 0
      maximum: 250

    TransactionId:
      description: Transaction id generated at the time of payment initialization.
      type: string
      example: "537edec8-d33e-4ee8-93a7-b9f61876950c"
      readOnly: true

    PaymentId:
      description: Unique Identifier provided by disbursement platform at the time of initialization per recepient.
      type: string
      example: "8a34144657d0aa6e0157d3808ed000f2"
      readOnly: true
#-------------------------------------
# Common Models
#-------------------------------------
    DeviceInfo:
      description: Request origin device details
      type: object
      required:
        - id
        - kind
      properties:
        id:
          description: Unique Id for the device. Value should not contain line feeds, carriage returns, tabs, leading or trailing spaces, or multiple spaces.
          type: string
          example: "537edec8-d33e-4ee8-93a7-b9f61876950c"
        kind:
          description: Possible values are mobile, wearable, automobile, embedded,desktop, other.
          type: string
          example: "mobile"
        details:
          title: deviceData
          description: Device data information from multiple providers.
          type: array
          minItems: 0
          uniqueItems: true
          items:
            description: Collection of device data
            type: object
            properties:
              provider:
                description: Identifies the provider of the data and is often used when decrypting data on the server.
                type: string
                example: "InAuth"
              dataCapture:
                description: Device data captured as a bundle and transmitted as an encrypted and/or specifically formated string.
                type: object
                properties:
                  rawData:
                    description: Device capture - raw data blob
                    type: string
                    example: "aaaaaXREUVZGRlFY...aMV"
                  dataEventId:
                    description: Event identifier used map state on the server.
                    type: string
                    example: "BB8E4E92...Fz1E063113"
                  captureTime:
                    description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                    type: string
                    format: date-time
                    example: "2016-04-16T16:06:05Z"
              dataStatic:
                description: Device static details
                type: object
                properties:
                  os:
                    description: Device OS name
                    type: string
                    example: "Android 5.1.1 Lollipop"
                  osVersion:
                    description: Device OS version
                    type: string
                    example: "5.1.1 Lollipop"
                  model:
                    description: Device model
                    type: string
                    example: "XT1540"
                  type:
                    description: Device type
                    type: string
                    example: "Moto G"
              dataDynamic:
                description: Device location details
                type: object
                properties:
                  latitude:
                    description: Device position - latitude at the time of the data event
                    type: string
                    example: "13.0827 N"
                  longitude:
                    description: Device position - longitude at the time of the data event
                    type: string
                    example: "80.2707 E"
                  ipAddress:
                    description: IP address
                    type: string
                    example: "172.27.37.221"
                  captureTime:
                    description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                    type: string
                    format: date-time
                    example: "2016-04-16T16:06:05Z"


    Error:
      description: (Response Only) Model for error messaging
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              description: Detailed information about message format errors.
              type: array
              items:
                properties:
                  field:
                    description: The property or attribute associated with the error
                    type: string
                  message:
                    description: Information specific to a property or attribute.
                    type: string
        hostExtraInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
      example:
        code: "40000"
        message: "Example Error"
        category: "example"
        developerInfo:
          developerMessage: "Invalid Message format in request payload"
          moreInfo: "https://www.example.com/errors/40000"
          fieldError:
            - field: "example id"
              message: "exampleId is mandatory"

    AccountId:
      description: The unique Id generated at the time of card/account vaulting. This can be used if the card/account infomration is already available in DDP system. If accountId is provided then fundingInformation is not required.
      type: string
      maxLength: 75
      example: "292bb6b886fc4446894f878b7e32bd5e"

    FirstName:
      description: First Name of the Recipient.
      type: string
      maxLength: 75
      example: First Name

    LastName:
      description: Last Name of the Recipient.
      type: string
      maxLength: 75
      example: Last Name

    DateOfBirth:
      description: Date of Birth of the recipient. This is mandatory for non-business recipient.
      type: string
      maxLength: 10
      example: 11/11/2011

    TIN:
      description: TIN of the business recipient. This is mandatory for business recipient.
      type: string
      maxLength: 11
      example: 345-55-2345

    RecipientIdentifier:
      description: Recipient's Identification Type.
      type: string
      readOnly: false
      enum:
        - Last_4_of_SSN
        - SPECIAL_CODE
        - ACCOUNT_NUMBER
        - DATE_OF_BIRTH
        - PHONE_NUMBER

    RecipientIdentifierValue:
      type: string
      maxLength: 30
      example: 03/12/2011
      description: Recipient's Identification Data. Identification Data has to be sync with Identification Type for example - Date of Birth MM/DD/YYYY format - 03/12/2000, Member Id - 1234567890, Special Code - TEXT12345.

    Reason:
      description: Reason code for the status Change Or Create
      type: string
      enum:
        - CLIENT_INITIATED
        - RECIPIENT_INITIATED
        - SYSTEM_INITIATED
        - FISERV_INITIATED
      default: CLIENT_INITIATED
      readOnly: true

    DoingBusinessAs:
      description: Recipient Profile Company Name-
      type: string
      maxLength: 75
      example: Lyft LLC.

    Comments:
      description: comments while adding the Recipient Profile.
      type: string
      maxLength: 250
      example: New Recipinet

    Guest:
      description: To Identify to guest recipients.
      type: boolean
      example: false

    CreatedBy:
      description: ussername of the person creating the record. This is for Audit purpose.
      type: string
      maxLength: 75
      example: User1234

    UpdatedBy:
      description: ussername of the person updating the record. This is for Audit purpose.
      type: string
      maxLength: 75
      example: User1235

    OrginatorId:
      description: >-
          A orginator ID is a string value passed by a client app to the API. The orginator ID uniquely identifies the merchant information.
      type: string
      maxLength: 75
      example: "4ee8-93a7-b9f61876950dd"

    RecipientType:
      description: Merchant should select the Recipient Type while adding the recipient details. Possibile options are are Consumer or  Business.
      type: string
      example: Consumer


#-------------------------------------
# ENUM Models
#-------------------------------------

    AccountType:
      title: AccountType
      description: Indicates the Type of Account.
      type: string
      readOnly: true
      enum:
        - CHECKING
        - SAVINGS

    TransactionStatus:
      title: Transaction Status
      description: Indicates the status of an Transaction initialization operation.
      type: string
      readOnly: true
      enum:
        - TF
        - PA
        - PD
        - IP
        - TC
        - TV
        - TE

    PaymentStatus:
      title: Payment Status
      description: Indicates the status of an Payment with respespect of each payment operation.
      type: string
      readOnly: true
      enum:
        - DF
        - DP
        - DS
        - DA
        - DR
        - DI
        - DD
        - DH
        - DC
        - PE
        - PC
        - AF
        - RE
        - IP
        - RP
        - RS
        - RF
        - DNF

    FundingSourceType:
      description: Describes the type of Funding source
      type: string
      readOnly: true
      enum:
        - CREDIT
        - DEBIT
        - ACH
        - PREPAID
        - TOKEN
        - VENMO
        - PAYPAL
        - ECHECK

    Requestor:
      description: This is to identify request requestor.
      type: string
      readOnly: false
      enum:
        - MERCHANT
        - RECIPIENT

    RecipientStatus:
      title: Status
      description: Indicates the status of an Auhtrization operation.
      type: string
      readOnly: true
      enum:
        - NOT_REGISTERED
        - ACTIVE
        - LOCKED
        - HOLD
        - CLOSED

    TokenProvider:
      title: Specify the list of token providers
      description: Specify the list of token providers.
      type: string
      enum:
        - TRANS_ARMOR
        - NETWORKS
        - SINGLE_USE_TOKEN
        - ENROLMENT_VAULT

    TSPID:
      description: A reference id provided to merchant in the response. This is to identtify source of tokenReferenceId. probabile values are define as enum.
      type: number
      enum:
        - 400
        - 501
        - 600
        - 300
        - 111

    ReversalCode:
      description: Reversal reason code for ACH transactions which disbursed to recipient account.
      type: number
      enum:
        - 001
        - 002
        - 003

#-------------------------------------
# response Models
#-------------------------------------
    NoContent:
      description: The request succeeded but there’s really nothing to show.

    BadRequest:
      description: Bad request
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized

    NotFound:
      description: Not Found - The requested resource doesn't exist.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'

    Conflict:
      description: Conflict - The requested operation conflicts with the current state of the identified resource.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'

    ServerError:
      description: An unexpected server error occured.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'

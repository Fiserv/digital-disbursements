#-------------------------------------
# Initial Version
# Adding attribute "AdditionalEmailAddresses" under recipeint object.
#-------------------------------------
openapi: 3.0.0
info:
  version: 0.0.3
  title: Digital Disbursement Platform Recipient APIs.
  description: 
    This Specification document lists the APIs required to onboard
    Recipient Profile on Digital Disbursement portal.

servers:
  - url:  https://qa.api.firstdata.com
    description: This url is for QA testing.
  - url:  https://int.api.firstdata.com
    description: This url is for customer testing.
  - url: https://prod.api.firstdata.com
    description: This is production url.

paths:
  /ddp/v1/recipients:
    post:
      x-group-name: Recipient Service
      x-proxy-name: Create Recipient
      x-default-example: FullRequest
      # x-child-product-name: Recipient Service
      tags:
        - Digital Disbursement Platform Recipient APIs.
      description: This API is to onboard recipient profile on Digital Disbursement Platform.
      requestBody:
        description: Details required to add the recipient.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipientProfileRequest'
            examples:
              Minimal Request:
                summary: Minimal Request
                $ref: '#/components/examples/MinimalRequest'
              Full Request:
                summary: Full Request
                $ref: '#/components/examples/FullRequest'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientProfileResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/ServerError'
        500:
          $ref: '#/components/responses/ServerError'
      parameters:
        - $ref: '#/components/parameters/ApiKeyHeader'
        - $ref: '#/components/parameters/TimestampHeader'
        - $ref: '#/components/parameters/AuthorizationHeader'
        - $ref: '#/components/parameters/ClientRequestIdHeader'

  /ddp/v1/recipients/{id}:
    get:
      x-group-name: Recipient Service
      x-proxy-name: Get Recipient
      # x-child-product-name: Recipient Service
      tags:
        - Digital Disbursement Platform Recipient APIs.
      description: This API is fetch the  recipient profile on Digital Disbursement Platform.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecipientResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/ServerError'
        500:
          $ref: '#/components/responses/ServerError'
      parameters:
        - $ref: '#/components/parameters/ApiKeyHeader'
        - $ref: '#/components/parameters/TimestampHeader'
        - $ref: '#/components/parameters/AuthorizationHeader'
        - $ref: '#/components/parameters/ClientRequestIdHeader'
        - in: path
          name: id
          description: Unique Id associated with Recipient Profile while set up. The value can be MerchantCustomerId or RecipientId. Merchant provision through Apigee should always pass MerchantCustomerId.
          required: true
          schema:
            type: string
    patch:
      x-group-name: Recipient Service
      x-proxy-name: Update Recipient
      # x-child-product-name: Recipient Service
      tags:
        - Digital Disbursement Platform Recipient APIs.
      description: This API is to patch the  recipient profile on Digital Disbursement Platform.
      requestBody:
        description: Details required to add the recipient.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRecipientRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfileResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/ServerError'
        500:
          $ref: '#/components/responses/ServerError'
      parameters:
        - $ref: '#/components/parameters/ApiKeyHeader'
        - $ref: '#/components/parameters/TimestampHeader'
        - $ref: '#/components/parameters/AuthorizationHeader'
        - $ref: '#/components/parameters/ClientRequestIdHeader'
        - in: path
          name: id
          description: Unique Id associated with Recipient Profile while set up. The value can be MerchantCustomerId or RecipientId. Merchant provision through Apigee should always pass MerchantCustomerId.
          required: true
          schema:
            type: string

components:
  parameters:
    ApiKeyHeader:
      in: header
      name: Api-Key
      description: >-
        An API key is a string value passed by a client app to the API
        proxies. The key uniquely identifies the client app.
      required: true
      schema:
        type: string
      example: Value supplied by Dev Studio
    TimestampHeader:
      in: header
      name: Timestamp
      description: >-
        Epoch timestamp in the request initiating system
      required: true
      schema:
        type: string
      example: Value supplied by Dev Studio
    AuthorizationHeader:
      in: header
      name: Authorization
      description: >-
        Authorization information for the request. Format- `HMAC
        {hmacToken}`
      required: true
      schema:
        type: string
      example: Value supplied by Dev Studio
    ClientRequestIdHeader:
      in: header
      name: Client-Request-Id
      description: >-
        Contains a unique ID generated by the client that can be used for
        enforcing idempotency on POST actions. POSTs are inherently
        non-idempotent and submitting the exact same request multiple times
        would create duplicate resources.

        Note:- Omitting this header
        increases the risk of duplicate transactions.
      required: true
      schema:
        type: string
      example: Value supplied by Dev Studio
  responses:
    BadRequest:
      description: The request cannot be validated.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/Error'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: GATEWAY, code: '105', field: amount.currency, message: Invalid
                amount or currency}
    Unauthorized:
      x-model-version: 1.0
      description: The request was unauthorized.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/Error'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: ApiKey and/or Authentication supplied are invalid.}
    NotFound:
      x-model-version: 1.0
      description: The requested resource does not exist.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/Error'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Resource not found.}
    RequestTimeout:
      x-model-version: 1.0
      description: The request was timed out due to not receiving the request in time.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/Error'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Broken client connectivity.}
    ServerError:
      x-model-version: 1.0
      description: An unexpected internal server error occurred.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/Error'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
              error:
              - {type: GATEWAY, message: Error sending request to Transarmor.}
  schemas:
#------------------------------------------
# Request/ Reponse Model
#------------------------------------------
    RecipientProfileRequest:
      description: This Request model is for Recipient Profile information
      type: object
      required:
      - merchant
      - recipient
      properties:
        merchant:
           $ref: '#/components/schemas/MerchantInfo'
        recipient:
          $ref: '#/components/schemas/RecipientProfileInfo'
        customFields:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true

    RecipientProfileResponse:
      description: This Response model is for Recipient Profile information
      type: object
      required:
        - merchant
        - email
        - status
      properties:
        recipientId:
          $ref: '#/components/schemas/RecipientId'
        merchant:
           $ref: '#/components/schemas/MerchantInfo'
        email:
          $ref: '#/components/schemas/Email'
        status:
          $ref: '#/components/schemas/RecipientStatus'
        customFields:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true

    UpdateRecipientRequest:
      description: This Response model is for Recipient Profile update information.
      type: object
      required:
       - recipient
      properties:
        recipient:
          $ref: '#/components/schemas/RecipientProfileInfo'
        customFields:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true

    UpdateProfileResponse:
      description: This Response model is for Recipient Profile information
      type: object
      required:
        - merchant
        - emailAddress
        - status
      properties:
        recipientId:
          $ref: '#/components/schemas/RecipientId'
        emailAddress:
          $ref: '#/components/schemas/Email'
        merchant:
          type: array
          minItems: 1
          items:
           $ref: '#/components/schemas/MerchantInfo'
        status:
          $ref: '#/components/schemas/RecipientStatus'

    GetRecipientResponse:
      description: Get RecipientResponse respsone object model
      type: object
      required:
       - merchant
       - recipient
      properties:
        recipient:
          $ref: '#/components/schemas/RecipientProfileInfo'
        merchant:
          type: array
          minItems: 1
          items:
           $ref: '#/components/schemas/MerchantInfo'
        pages:
           $ref: '#/components/schemas/PageLink'

#-------------------------
# Oject Model
#-------------------------
    Address:
      description: A physical mailing address for this card holder.
      type: object
      required:
      - type
      - street
      - houseNumberOrName
      - city
      - stateOrProvince
      - postalCode
      - country
      properties:
        type:
          description: Canonical type values of "work", "home", "billing" and "other".
          type: string
        houseNumberOrName:
          description: Housse number or name of the address
          type: string
        street:
          description: The full street address component, which may include house number, street name, P.O. box, and multi-line extended street address information.
          type: string
        city:
          description: The city or locality component.
          type: string
        stateOrProvince:
          description: The state or region component.
          type: string
        postalCode:
          description: The zip code or postal code component.
          type: string
        country:
          description: The country name component.  When specified, the value MUST be in ISO 3166-1 "alpha-2" code format; e.g., the United States and Sweden are "US" and "SE", respectively.
          type: string
        formatted:
          description: The full mailing address, formatted for display or use with a mailing label.
          type: string
        primary:
          description: Indicates if this is the default address for the associated resource. It only has meaning when used in a set or array of addresses.
          type: boolean
      example:
        type: "work"
        street: "100 Universal City Plaza"
        city: "Hollywood"
        stateOrProvince: "CA"
        postalCode: "91608"
        country: "USA"
        formatted: "100 Universal City Plaza\nHollywood, CA 91608 US"
        primary: true

    Email:
      description: Email address for the user.
      type: object
      required:
        - value
      properties:
        type:
          description: >-
            The "type" sub-attribute is used to provide a classification
            meaningful to the (human) user.  The user interface should encourage
            the use of basic values of "work", "home", and "other" and MAY allow
            additional type values to be used at the discretion of the service
            client.
          type: string
        value:
          description: The value SHOULD be specified according to RFC5321.
          type: string
        primary:
          description: >-
            Defines if this entry is to be used as the primary or default for
            the user.
          type: boolean
          default: false
      example:
        value: "bjensen@example.com"
        type: "work"
        primary: true

    MerchantInfo:
      description: Merchant provided details.
      type: object
      required:
        - merchantCustomerId
      properties:
        merchantCustomerId:
           $ref: '#/components/schemas/MerchantCustomerId'

    NVP:
      description: Name and Value pair.
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        valueAsList:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/KVM'
          uniqueItems: true

    KVM:
      description: Key and Value pair.
      type: object
      properties:
        Id:
          type: string
        value:
          type: string

    PageLink:
      description: Page link information.
      type: object
      readOnly: true
      properties:
        firstPage:
          type: boolean
          description: Indicates if the list contains first page data
        lastPage:
          type: boolean
          description: Indicates if the list contains last page data
          example: false
        currentPage:
          type: integer
          description: Current page number
          example: 1
        currentPageRecords:
          type: integer
          description: Number of records in current page
          example: 25
        totalPages:
          type: integer
          example: 2
        totalRecords:
          type: integer
          example: 27
        sortOrder:
          type: string
          enum:
            - asc
            - desc
          example: asc
          default: asc
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    Link:
      description: Model to communicate linked resources.
      type: object
      required:
        - href
        - rel
      properties:
        href:
          description: URL to linked resource.
          type: string
          format: uri
        rel:
          description: Defines the type of link relationship to current resource.
          type: string
          enum:
            - current.page
            - previous.page
            - next.page
            - self
          example:
            "self"
        method:
          description: Defines the HTTP method for the given href.
          type: string
          default: "GET"
          example:
            "GET"

    Phone:
      description: Phone number for the user.
      type: object
      required:
      - countryCode
      - value
      properties:
        countryCode:
          description: Country code for the phone number.
          type: string
        value:
          description: The value SHOULD be specified according to the format defined in RFC3966, e.g., 'tel:+1-201-555-0123'.
          type: string
        type:
          description: Often has typical values of "work","billing", "home", "mobile", "fax", "pager", and "other" and MAY allow more types to be defined by the service client.
          type: string
        extension:
          description: Defines the extension of the phone number.
          type: string
      example:
        countryCode: "USA"
        value: "704-884-2754"
        type: "billing"
        extension: "2145"

    RecipientProfileInfo:
      description: This Request model is for Recipient Profile information
      type: object
      required:
       - recipientType
       - recipientId
       - firstName
       - lastName
       - doingBusinessAs
       - emailAddress
       - recipientIdentifier
       - recipientIdentifierValue
       - address
       - guest
      properties:
        recipientType:
          $ref: '#/components/schemas/RecipientType'
        recipientId:
          $ref: '#/components/schemas/RecipientId'
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        doingBusinessAs:
          $ref: '#/components/schemas/DBA'
        dateOfBirth:
          $ref: '#/components/schemas/DateOfBirth'
        tin:
          $ref: '#/components/schemas/TIN'
        ssn:
          $ref: '#/components/schemas/SSN'
        emailAddress:
           $ref: '#/components/schemas/Email'
        additionalEmailAddresses:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        userId:
           $ref: '#/components/schemas/userId'
        password:
           $ref: '#/components/schemas/Password'
        phoneNumber:
          $ref: '#/components/schemas/Phone'
        recipientIdentifier:
          $ref: '#/components/schemas/RecipientIdentifier'
        recipientIdentifierValue:
          $ref: '#/components/schemas/RecipientIdentifierValue'
        status:
          $ref: '#/components/schemas/RecipientStatus'
        reason:
          $ref: '#/components/schemas/Reason'
        guest:
          $ref: '#/components/schemas/Guest'
        address:
          $ref: '#/components/schemas/Address'
        Description:
          $ref: '#/components/schemas/Description'
        ceatedBy:
          $ref: '#/components/schemas/CreatedBy'
        updatedBy:
          $ref: '#/components/schemas/UpdatedBy'

#-------------------------------------
# Common Models
#-------------------------------------

    RecipientId:
      description: Unique Key to look up the Recipient Profile.
      type: string
      readOnly: true
      maxLength: 75
      example: 0d3c99f9-d7dd-4e0e-9c86-71d189ecdc95

    FirstName:
      description: First Name of the Recipient.
      type: string
      maxLength: 20
      example: First Name

    LastName:
      description: Last Name of the Recipient.
      type: string
      maxLength: 20
      example: Last Name

    DBA:
      description: This is the business name of the recipient. This will come only when the recipient is busniness recipient.
      type: string
      maxLength: 20
      example: Last Name

    DateOfBirth:
      description: Date of Birth of the recipient. This is mandatory for non-business recipient.
      type: string
      maxLength: 10
      example: 11/11/2011

    TIN:
      description: TIN of the business recipient. This is mandatory for business recipient.
      type: string
      maxLength: 11
      example: 345-55-2345

    SSN:
      description: SSN of the recipient. This is mandatory for Money Network card.
      type: string
      maxLength: 11
      example: 633-55-2345

    userId:
      description: user id for money netwrok card and user registration. For user registration this should be recipeint registered email address.
      type: string
      maxLength: 12
      example: passw0rd!

    Password:
      description: user password for money netwrok card and user registration.
      type: string
      maxLength: 12
      example: passw0rd!

    RecipientIdentifierValue:
      type: string
      maxLength: 30
      example: 03/12/2011
      description: Recipient's Identification Data. Identification Data has to be sync with Identification Type for example - Date of Birth MM/DD/YYYY format - 03/12/2000, Member Id - 1234567890, Special Code - TEXT12345.

    Description:
      description: comments while adding the Recipient Profile.
      type: string
      maxLength: 250
      example: New Recipinet

    Guest:
      description: To Identify to guest recipients.
      type: boolean
      default: true

    CreatedBy:
      description: username of the person creating the record. This is for Audit purpose.
      type: string
      maxLength: 75
      example: User1234

    UpdatedBy:
      description: username of the person updating the record. This is for Audit purpose.
      type: string
      maxLength: 75
      example: User1235

    MerchantCustomerId:
      description: MerchantCustomerId provided by client for each recipient.
      type: string
      maxLength: 75
      example: 00009876543234567

    RecipientType:
      description: Merchant should select the Recipient Type while adding the recipient details. Possibile options are are Consumer or Business.
      type: string
      example: Consumer

#-------------------------------------
# Error Models
#-------------------------------------

    Error:
      description: (Response Only) Model for error messaging
      type: object
      properties:
        code:
          type: string
          description: >-
            Uniquely identifies an error condition. Client applications need to
            read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          description: >-
            Information that needs to be understood by the client developers and
            should not be interpreted for application processing.
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              description: Detailed information about message format errors.
              type: array
              items:
                properties:
                  field:
                    description: The property or attribute associated with the error
                    type: string
                  message:
                    description: Information specific to a property or attribute.
                    type: string
      example:
        code: '40000'
        message: Example Error
        category: example
        developerInfo:
          developerMessage: Invalid Message format in request payload
          moreInfo: 'https://www.example.com/errors/40000'
          fieldError:
            - field: example id
              message: exampleId is mandatory

#-------------------------------------
# ENUM Models
#-------------------------------------

    RecipientStatus:
      title: Status
      description: Indicates the status of an Auhtrization operation.
      type: string
      readOnly: true
      enum:
        - NOT_REGISTERED
        - ACTIVE
        - LOCKED
        - HOLD
        - CLOSED
      example: "ACTIVE"

    RecipientIdentifier:
      description: Recipient's Identification Type.
      type: string
      readOnly: false
      enum:
        - Last_4_of_SSN
        - SPECIAL_CODE
        - ACCOUNT_NUMBER
        - DATE_OF_BIRTH
        - PHONE_NUMBER
      example: "DATE_OF_BIRTH"


    Requestor:
      description: This is to identify request requestor.
      type: string
      readOnly: false
      enum:
        - MERCHANT
        - RECIPIENT
      example: "MERCHANT"

    Reason:
      description: Reason code for the status Change Or Create
      type: string
      enum:
        - CLIENT_INITIATED
        - RECIPIENT_INITIATED
        - SYSTEM_INITIATED
        - FISERV_INITIATED
        - SIGNUP
      default: CLIENT_INITIATED
      readOnly: true
      example: "CLIENT_INITIATED"
    NoContent:
      description: The request succeeded but there’s really nothing to show.
    BadRequest:
      description: Bad request
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
    NotFound:
      description: Not Found - The requested resource doesn't exist.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'
    Conflict:
      description: >-
        Conflict - The requested operation conflicts with the current state of
        the identified resource.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'
    ServerError:
      description: An unexpected server error occured.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'

  examples:
    MinimalRequest:
      value: {
              "merchant": {
                "merchantCustomerId": 9876543234567
              },
              "recipient": {
                "recipientType": "Consumer",
                "firstName": "First Name",
                "lastName": "Last Name",
                "dateOfBirth": "11/11/2011",
                "emailAddress": {
                  "type": "work",
                  "value": "bjensen@example.com",
                  "primary": true
                },
                "phoneNumber": {
                  "countryCode": "USA",
                  "value": "704-884-2754",
                  "type": "home",
                  "extension": "2145"
                },
                "recipientIdentifier": "DATE_OF_BIRTH",
                "recipientIdentifierValue": "11/11/2011",
                "guest": true,
                "address": {
                  "type": "work",
                  "street": "100 Universal City Plaza",
                  "city": "Hollywood",
                  "stateOrProvince": "CA",
                  "postalCode": "91608",
                  "country": "USA",
                  "formatted": "100 Universal City Plaza, Hollywood, CA 91608 US",
                  "primary": true
                },
              }
            }
    FullRequest:
      value: {
              "merchant": {
                "merchantCustomerId": 9876543234567
              },
              "recipient": {
                "recipientType": "Consumer",
                "recipientId": "0d3c99f9-d7dd-4e0e-9c86-71d189ecdc95",
                "firstName": "First Name",
                "lastName": "Last Name",
                "doingBusinessAs": "Last Name",
                "dateOfBirth": "11/11/2011",
                "tin": "345-55-2345",
                "ssn": "633-55-2345",
                "emailAddress": {
                  "type": "work",
                  "value": "bjensen@example.com",
                  "primary": true
                },
                "additionalEmailAddresses": [
                  {
                    "type": "work",
                    "value": "bjensen@example.com",
                    "primary": true
                  }
                ],
                "userId": "passw0rd!",
                "password": "passw0rd!",
                "phoneNumber": {
                  "countryCode": "USA",
                  "value": "704-884-2754",
                  "type": "billing",
                  "extension": "2145"
                },
                "recipientIdentifier": "DATE_OF_BIRTH",
                "recipientIdentifierValue": "03/12/2011",
                "status": "ACTIVE",
                "reason": "CLIENT_INITIATED",
                "guest": true,
                "address": {
                  "type": "work",
                  "houseNumberOrName": "10",
                  "street": "100 Universal City Plaza",
                  "city": "Hollywood",
                  "stateOrProvince": "CA",
                  "postalCode": "91608",
                  "country": "USA",
                  "formatted": "100 Universal City Plaza\nHollywood, CA 91608 US",
                  "primary": true
                },
                "Description": "New Recipinet",
                "ceatedBy": "User1234",
                "updatedBy": "User1235"
              },
              "customFields": [
                {
                  "key": "string",
                  "value": "string",
                  "valueAsList": [
                    {
                      "Id": "string",
                      "value": "string"
                    }
                  ]
                }
              ]
            }

#-------------------------------------
# Initial Version
## Added nickname
# Added Paypal source seperated from Venmo
#-------------------------------------
openapi: 3.0.0
info:
  version: 0.0.3
  title: Digital Disbursement Platform Vaulting APIs
  description: This Specification document lists the APIs required for vaulting recipient account.

servers:
  - url:  https://qa.api.firstdata.com
    description: This url is for QA testing.
  - url:  https://int.api.firstdata.com
    description: This url is for customer testing.
  - url: https://prod.api.firstdata.com
    description: This is production url.

paths:
  /ddp/v1/recipients/{recipientId}/accounts:
    post:
      x-group-name: Recipient Accounts
      x-proxy-name: Create Account
      x-child-product-name: Account Vaulting Service
      tags:
        - Digital Disbursement Platform Accounts APIs
      description: This API collects the funding information and stores in the user wallet for Disbursement. It creates a new record in user's profile.
      parameters:
        - in: header
          name: Api-Key
          description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
          required: true
          schema:
            type: string
        - in: header
          name: Timestamp
          description: Epoch timestamp in the request initiating system
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: Authorization information for the request. Format- `HMAC {hmacToken}`
          required: true
          schema:
            type: string
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
          required: true
          schema:
            type: string
        - in: header
          name: access_token
          description: Token provided by DDP along with public key /tokens API. This is required for encrypted PCI data vaulting. This is to identify public key associated with access token to decrypt the PCI data.
          required: false
          schema:
            type: string
        - in: path
          name: recipientId
          description: Unique Id associated with Recipient Profile while set up.
          required: true
          schema:
            type: string

      requestBody:
        description: Details required for add account for a recipeint.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        '201':
          description: Add Account response - Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRequest'
        '400':
          description: Add Account  response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Add Account  response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Initialization response - Not Found request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Add Account  response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

    get:
      x-group-name: Recipient Accounts
      x-proxy-name: Get Accounts
      x-child-product-name: Account Vaulting Service
      tags:
        - Digital Disbursement Platform Accounts APIs
      description: This API retrieve the list of accounts associated with recipient profile.
      parameters:
        - in: header
          name: Api-Key
          description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
          required: true
          schema:
            type: string
        - in: header
          name: Timestamp
          description: Epoch timestamp in the request initiating system
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: Authorization information for the request. Format- `HMAC {hmacToken}`
          required: true
          schema:
            type: string
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
          required: true
          schema:
            type: string
        - in: path
          name: recipientId
          description: Unique Id associated with Recipient Profile while set up.
          required: true
          schema:
            type: string


      responses:
        '200':
          description: Add Account  response - Success
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                items:
                  $ref: '#/components/schemas/AccountResponse'
                uniqueItems: true
        '400':
          description: Get Account  response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Get Account response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Get Account response - Not Found request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Get Account response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /ddp/v1/recipients/{recipientId}/accounts/{id}:
    get:
      x-group-name: Recipient Accounts
      x-proxy-name: Get Account
      x-child-product-name: Account Vaulting Service
      tags:
        - Digital Disbursement Platform Accounts APIs
      description: This API retrieve the list of accounts associated with recipient profile.
      parameters:
        - in: header
          name: Api-Key
          description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
          required: true
          schema:
            type: string
        - in: header
          name: Timestamp
          description: Epoch timestamp in the request initiating system
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: Authorization information for the request. Format- `HMAC {hmacToken}`
          required: true
          schema:
            type: string
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
          required: true
          schema:
            type: string
        - in: path
          name: recipientId
          description: Unique Id associated with Recipient Profile while set up.
          required: true
          schema:
            type: string
        - in: path
          name: id
          description: Unique DDP vauled Id associated with funding information for subsequent use.
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Add Account  response - Success
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                items:
                  $ref: '#/components/schemas/AccountResponse'
                uniqueItems: true
        '400':
          description: Get Account  response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Get Account response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Get Account response - Not Found request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Get Account response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

    patch:
      x-group-name: Recipient Accounts
      x-proxy-name: Update Account
      x-child-product-name: Account Vaulting Service
      tags:
        - Digital Disbursement Platform Accounts APIs
      description: This API updates the Debit card details for existing card.
      parameters:
        - in: header
          name: Api-Key
          description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
          required: true
          schema:
            type: string
        - in: header
          name: Timestamp
          description: Epoch timestamp in the request initiating system
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: Authorization information for the request. Format- `HMAC {hmacToken}`
          required: true
          schema:
            type: string
        - in: header
          name: Client-Request-Id
          description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
            Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
          required: true
          schema:
            type: string
        - in: header
          name: access_token
          description: Token provided by DDP along with public key /tokens API. This is required for encrypted PCI data vaulting. This is to identify public key associated with access token to decrypt the PCI data.
          required: false
          schema:
            type: string
        - in: path
          name: recipientId
          description: Unique Id associated with Recipient Profile while set up.
          required: true
          schema:
            type: string
        - in: path
          name: id
          description: Unique DDP vauled Id associated with funding information for subsequent use.
          required: true
          schema:
            type: string

      requestBody:
        description: Details required for add account for a recipeint.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
      responses:
        '204':
          description: Update Account response - Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContent'
        '400':
          description: Get Account  response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Get Account response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Get Account response - Not Found request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Get Account response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  
  /v1/recipients/{recipientId}/accounts/validate:
    post:
      x-group-name: Recipient Accounts
      x-proxy-name: Validate Account
      x-child-product-name: Account Vaulting Service
      tags:
        -  Digital Disbursement Platform API - Validate ACH Routing Number
      parameters:
        - in: header
          name: Api-Key
          description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
          required: true
          schema:
            type: string
        - in: path
          name: recipientId
          description: Unique Id associated with Recipient Profile while set up.
          required: true
          schema:
            type: string

      requestBody:
        description: Details required for add account for a recipeint. Only ACH routing# validation can be achived using this API. Merchant can send API Routint# in payload and API will return Bank name associated with Routing# if it is valid.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'

      responses:
        '200':
          description: Account Valid - Success
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/ValidationResponse'
        '400':
          description: Recipient response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Recipient response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /ddp/v1/recipients/{recipientId}/cards/session:
    post:
      x-group-name: Money Network Card
      x-proxy-name: Initialize Session
      x-child-product-name: Account Vaulting Service
      tags:
        - Digital Disbursement Platform - Add Money Network Card
      description: This API is to initialize the session for New Money Network Card for Recipients on Disbursement portal.
      parameters:
        - in: header
          name: Api-Key
          description: >-
            An API key is a string value passed by a client app to the API
            proxies. The key uniquely identifies the client app.
          required: true
          schema:
            type: string
        - in: header
          name: Timestamp
          description: Epoch timestamp in the request initiating system
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: >-
            Authorization information for the request. Format- `HMAC
            {hmacToken}`
          required: true
          schema:
            type: string
        - in: header
          name: Client-Request-Id
          description: >-
            Contains a unique ID generated by the client that can be used for
            enforcing idempotency on POST actions. POSTs are inherently
            non-idempotent and submitting the exact same request multiple times
            would create duplicate resources. Note:- Omitting this header
            increases the risk of duplicate transactions.
          required: true
          schema:
            type: string
        - in: path
          name: recipientId
          description: Unique Id associated with Recipient Profile while set up. The value can be MerchantCustomerId or RecipientId. Merchant provision through Apigee should always pass MerchantCustomerId.
          required: true
          schema:
            type: string

      requestBody:
       description: Details required to create New Money Network session for recipient.
       required: true
       content:
         application/json:
           schema:
             $ref: '#/components/schemas/SessionRequest'


      responses:
        '201':
          description: New Money Network session Creation Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        '400':
          description: New MN Card response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: New MN Card response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '409':
          description: New MN Card response - conflict response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: New MN Card response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /ddp/v1/recipients/{recipientId}/cards:
    post:
      x-group-name: Money Network Card
      x-proxy-name: Create Card
      x-child-product-name: Account Vaulting Service
      tags:
        - Digital Disbursement Platform - Add Money Network Card
      description: This API is to create the New Money Network Card for Recipients on Disbursement portal.
      parameters:
        - in: header
          name: Api-Key
          description: >-
            An API key is a string value passed by a client app to the API
            proxies. The key uniquely identifies the client app.
          required: true
          schema:
            type: string
        - in: header
          name: Timestamp
          description: Epoch timestamp in the request initiating system
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: >-
            Authorization information for the request. Format- `HMAC
            {hmacToken}`
          required: true
          schema:
            type: string
        - in: header
          name: Client-Request-Id
          description: >-
            Contains a unique ID generated by the client that can be used for
            enforcing idempotency on POST actions. POSTs are inherently
            non-idempotent and submitting the exact same request multiple times
            would create duplicate resources. Note:- Omitting this header
            increases the risk of duplicate transactions.
          required: true
          schema:
            type: string
        - in: header
          name: sessionId
          description: >-
            System generated unique session ID from Money Network platform.
          required: true
          schema:
            type: string

        - in: path
          name: recipientId
          description: Unique Id associated with Recipient Profile while set up. The value can be MerchantCustomerId or RecipientId. Merchant provision through Apigee should always pass MerchantCustomerId.
          required: true
          schema:
            type: string

      requestBody:
        description: Details required to create New Money Network Card for recipient.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMNCardRequest'
      responses:
        '201':
          description: New Money Network Card Creation Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewMNCardResponse'
        '400':
          description: New MN Card response - Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: New MN Card response - Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '409':
          description: New MN Card response - conflict response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: New MN Card response - Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

components:
  schemas:
##-------------------------------------
## Response Model
##-------------------------------------

    SessionRequest:
      description: This Response model is for initialize session New Money Network Card
      type: object
      properties:
        transactionId:
          $ref: '#/components/schemas/TransactionId'
        source:
          $ref: '#/components/schemas/Source'

    SessionResponse:
      description: This Response model is for initialize session New Money Network Card
      type: object
      required:
        - traceId
        - sessionContext
        - links
      properties:
        traceId:
          $ref: '#/components/schemas/TraceId'
        sessionContext:
          $ref: '#/components/schemas/SessionContext'
        links:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/Links'



    NewMNCardRequest:
      description: This Request model is for New MN Card information.
      type: object
      required:
      - UserProfile
      - PersonProfile
      - SecurityQuestionAnswers
      - ConsentGroups
      - IdCheckRequired
      properties:
        userProfile:
          $ref: '#/components/schemas/UserProfile'
        personProfile:
          $ref: '#/components/schemas/PersonProfile'
        securityQuestionAnswers:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/SQA'
          uniqueItems: true
        consentGroups:
          type: array
          minItems : 0
          items:
            $ref: '#/components/schemas/ConsentGroups'
        idCheckRequired:
         $ref: '#/components/schemas/IdCheckRequired'
        idCheckRequest:
         $ref: '#/components/schemas/IdCheckRequest'

    NewMNCardResponse:
      description: This Response model is for New Money Network Card
      type: object
      required:
        - traceId
        - sessionId
        - requestDateTime
        - accountProfile
        - idCheckQuestions
      properties:
        accountProfile:
          $ref: '#/components/schemas/AccounfProfile'
        idCheckQuestions:
         $ref: '#/components/schemas/IdCheckQuestionResponce'
        idCheckStatus:
         $ref: '#/components/schemas/IdCheckStatus'



    AccountRequest:
      title: Account request object model.
      type: object
      required:
        - accounts
      properties:
        accounts:
          $ref: '#/components/schemas/Account'


    AccountResponse:
      title: Account respsone object model
      type: object
      required:
       - accounts
      properties:
        accounts:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Account'


    UpdateAccountRequest:
      title: Update Account request object model. This is to update the card expire date and to update the card Status in vaulting system.
      type: object
      properties:
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        status:
          $ref: '#/components/schemas/Status'
##-------------------------------------
## Object Model
##------------------------------------

    ConsentGroups:
      description: Consent Groups.
      type: object
      properties:
        consentGroupID:
          $ref: '#/components/schemas/ConsentGroupID'
        consentGroupName:
          $ref: '#/components/schemas/ConsentGroupName'
        displayText:
          $ref: '#/components/schemas/DisplayText'
        consents:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/Consent'
          uniqueItems: true


    IdCheckRequest:
      description: IdCheckRequest for Idology check
      type: object
      properties:
        idCheckRequest:
          $ref: '#/components/schemas/IdCheckNumber'
        idCheckQuestions:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/IdCheckQuestions'
          uniqueItems: true

    IdCheckQuestions:
      description: IdCheckQuestions Name and Value pair.
      type: object
      properties:
        key:
          type: string
        value:
          type: string

    IdCheckQuestionResponce:
      description: Idology check response
      type: object
      properties:
        questions:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/Questions'
          uniqueItems: true
        idCheckNumber:
          $ref: '#/components/schemas/IdCheckNumber'


    Questions:
      description: Questions.
      type: object
      properties:
        prompt:
          type: string
          example: In which city is ANY STREET?
        type:
          type: string
          example: city.of.residence
        answer:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/Answer'
          uniqueItems: true

    Consent:
      description: Consents.
      type: object
      properties:
        consentId:
          $ref: '#/components/schemas/ConsentId'
        consentName:
          $ref: '#/components/schemas/ConsentName'
        displayText:
          $ref: '#/components/schemas/DisplayText'
        accepted:
          $ref: '#/components/schemas/Accepted'
        acceptedDate:
          $ref: '#/components/schemas/CaptureTime'

    SQA:
      description: Secqurity Question/Answers.
      type: object
      properties:
        key:
          type: string
        value:
          type: string

    Links:
      description: Links as Key and Value pair
      type: object
      properties:
        key:
          type: string
        value:
          type: string

    KVM:
      description: Key and Value pair.
      type: object
      properties:
        Id:
          type: string
        value:
          type: string

    UserProfile:
      description: User profile for New MN Card.
      type: object
      required:
       - userName
       - password
       - emailAddress
      properties:
        userName:
          $ref: '#/components/schemas/UserName'
        password:
           $ref: '#/components/schemas/Password'
        emailAddress:
          $ref: '#/components/schemas/Email'

    PersonProfile:
      description: Person information for the recipient for new MN card
      type: object
      required:
        - firstName
        - lastName
        - middleName
        - dob
        - ssn
        - homePhone
        - workPhone
        - primaryAddress
        - shippingAddress
      properties:
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        middleName:
          $ref: '#/components/schemas/MiddleName'
        dob:
          $ref: '#/components/schemas/DateOfBirth'
        ssn:
          $ref: '#/components/schemas/SSN'
        homePhone:
          $ref: '#/components/schemas/HomePhone'
        workPhone:
          $ref: '#/components/schemas/WorkPhone'
        primaryAddress:
          $ref: '#/components/schemas/Address'
        shippingAddress:
          $ref: '#/components/schemas/Address'

    AccounfProfile:
      description: Account information for New Money Network Card/Account information
      type: object
      required:
        - accountNumber
        - cardNumber
        - expirationDate
        - rountingNumber
      properties:
        accountNumber:
          $ref: '#/components/schemas/AccountNumber'
        cardNumber:
          $ref: '#/components/schemas/CardNumber'
        exprationDate:
          $ref: '#/components/schemas/ExpDate'
        rountingNumber:
          $ref: '#/components/schemas/RountingNumber'

    SessionContext:
      description: Session context for New Money Network Card/Account information
      type: object
      required:
        - sessionId
        - securityQuestionAnswers
        - consentGroups
      properties:
        sessionId:
          $ref: '#/components/schemas/SessionId'
        securityQuestionAnswers:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/SQA'
          uniqueItems: true
        consentGroups:
          type: array
          minItems : 0
          items:
            $ref: '#/components/schemas/ConsentGroups'


    Account:
      description: Account information - can only be ONE of the account types.
      type: object
      required:
      - FundingSourceType
      properties:
        source:
          $ref: '#/components/schemas/FundingSourceType'
        card:
          $ref: '#/components/schemas/Card'
        ach:
          $ref: '#/components/schemas/ACH'
        prepaid:
          $ref: '#/components/schemas/Prepaid'
        venmo:
            $ref: '#/components/schemas/Venmo'
        paypal:
            $ref: '#/components/schemas/Paypal'
        status:
          $ref: '#/components/schemas/Status'
        token:
            $ref: '#/components/schemas/ReferenceToken'
    Check:
      description: Information about the Check
      type: object
      required:
        - recipient
        - name
      properties:
        email:
          $ref: '#/components/schemas/Email'
        name:
          type: string
          description: Name of the recipient
          example: "State Farm"

    ACH:
      description: Information about an ACH account
      type: object
      required:
      - accountNumber
      - routingNumber
      - type
      properties:
        accountNumber:
          type: string
          description: Unique number identifying the ACH account provided by Financial institution.
          example: '92658250156'
        routingNumber:
          type: string
          description: Number to identify the financial institution
          example: '999999999'
        type:
          $ref: '#/components/schemas/AccountType'
        token:
            $ref: '#/components/schemas/ReferenceToken'
        nickName:
          type: string
          description: Nick name provided by the recipient for the Card.
          example: 'John'
        default:
          type: boolean
          description: This is to identify if the payment methods should be set as default payment method for recipient.

    Address:
      description: A physical mailing address for this card holder.
      type: object
      required:
      - type
      - street
      - houseNumberOrName
      - city
      - stateOrProvince
      - postalCode
      - country
      properties:
        type:
          description: Canonical type values of "work", "home", "billing" and "other".
          type: string
        houseNumberOrName:
          description: Housse number or name of the address
          type: string
        street:
          description: The full street address component, which may include house number, street name, P.O. box, and multi-line extended street address information.
          type: string
        city:
          description: The city or locality component.
          type: string
        stateOrProvince:
          description: The state or region component.
          type: string
        postalCode:
          description: The zip code or postal code component.
          type: string
        country:
          description: The country name component.  When specified, the value MUST be in ISO 3166-1 "alpha-2" code format; e.g., the United States and Sweden are "US" and "SE", respectively.
          type: string
        formatted:
          description: The full mailing address, formatted for display or use with a mailing label.
          type: string
        primary:
          description: Indicates if this is the default address for the associated resource. It only has meaning when used in a set or array of addresses.
          type: boolean
      example:
        type: "work"
        street: "100 Universal City Plaza"
        city: "Hollywood"
        stateOrProvince: "CA"
        postalCode: "91608"
        country: "US"
        formatted: "100 Universal City Plaza\nHollywood, CA 91608 US"
        primary: true

    Card:
      description: Information on a credit account
      type: object
      required:
      - cardNumber
      - expiryDate
      properties:
        cardNumber:
          description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          type: string
          example: "4111111111111111"
        nameOnCard:
          description: Name as printed on physical card or on virtual account
          type: string
          example: "John Smith"
        alias:
          description: Last four values of the cardNumber
          type: string
          readOnly: true
          example: "1111"
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        token:
            $ref: '#/components/schemas/ReferenceToken'
        nickName:
          type: string
          description: Nick name provided by the recipient for the Card.
          example: 'John'
        default:
          type: boolean
          description: This is to identify if the payment methods should be set as default payment method for recipient.

    Email:
      description: (Request Only) Email address for the user.
      type: object
      required:
      - value
      properties:
        type:
          description: The "type" sub-attribute is used to provide a classification meaningful to the (human) user.  The user interface should encourage the use of basic values of "work", "home", and "other" and MAY allow additional type values to be used at the discretion of the service client.
          type: string
          writeOnly: true
        value:
          description: The value SHOULD be specified according to RFC5321.
          type: string
          writeOnly: true
        primary:
          description:
            Defines if this entry is to be used as the primary or default for the
            user.
          type: boolean
          default: false
          writeOnly: true
      example:
        value: bjensen@example.com
        type: work
        primary: true

    ExpiryDate:
      description: (Request Response both) Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.
      type: object
      required:
      - month
      - year
      properties:
        month:
          type: string
          description: Month format 'MM'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
          example: "09"
        year:
          type: string
          description: Year format 'YY'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
          example: "20"
        singleValue:
          type: string
          description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
          minLength: 4
          maxLength: 6
          readOnly: true

    NVP:
      title: Name and Value pair.
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        valueAsList:
          type: array
          minItems: 0
          items:
            type: string

    Prepaid:
      description: Prepaid Money Network account information.
      type: object
      properties:
        cardNumber:
          description: Prepaid card number.
          type: string
          example: "6759-6498-2643-0010"
        accountNumber:
          description: Prepaid card number.
          type: string
          example: "4226-4982-6438-0010"
        token:
            $ref: '#/components/schemas/ReferenceToken'
        nickName:
          type: string
          description: Nick name provided by the recipient for the Card.
          example: 'John'
        default:
          type: boolean
          description: This is to identify if the payment methods should be set as default payment method for recipient.

    Phone:
      description: Phone number for the user.
      type: object
      properties:
        countryCode:
          description: Country code for the phone number.
          type: string
        value:
          description: The value SHOULD be specified according to the format defined in RFC3966, e.g., 'tel:+1-201-555-0123'.
          type: string
        type:
          description: Often has typical values of "work","billing", "home", "mobile", "fax", "pager", and "other" and MAY allow more types to be defined by the service client.
          type: string
        extension:
          description: Defines the extension of the phone number.
          type: string
      example:
        code: +91
        value: 704-884-2754
        type: billing
        extension: "2145"

    ReferenceToken:
      description: Surrogate value used to represent a handle to an account without sharing PCI/PII data to look it up.
      type: object
      required:
      - tokenId
      - tokenProvider
      properties:
        tokenId:
          description: Actual token value
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        tokenProvider:
          $ref: '#/components/schemas/TokenProvider'
        tspId:
          $ref: '#/components/schemas/TSPID'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'

    Venmo:
      description: Information about a Venmo account.
      type: object
      properties:
        phone:
          $ref: '#/components/schemas/Phone'
        subject:
          type: string
          description: The subject line for the email that Venmo sends when payment for a payout item completes. The subject line is the same for all recipients. Value is an alphanumeric string with a maximum length of 255 single-byte characters.
          maximum: 250
        message:
          type: string
          description: The email message that Venmo sends when the payout item completes. The message is the same for all recipients.
          maximum: 1000

    Paypal:
      description: Information about a Paypal account.
      type: object
      properties:
        email:
          $ref: '#/components/schemas/Email'
        subject:
          type: string
          description: The subject line for the email that PayPal sends when payment for a payout item completes. The subject line is the same for all recipients. Value is an alphanumeric string with a maximum length of 255 single-byte characters.
          maximum: 250
        message:
          type: string
          description: The email message that PayPal sends when the payout item completes. The message is the same for all recipients.
          maximum: 1000
        phone:
          $ref: '#/components/schemas/Phone'
        paypalPayerId:
          type: string
          description: The encrypted PayPal account number.

#-------------------------------------
# Common Models
#-------------------------------------

    FirstName:
      description: First Name of the Recipient.
      type: string
      maxLength: 20
      example: First Name

    LastName:
      description: Last Name of the Recipient.
      type: string
      maxLength: 20
      example: Last Name

    MiddleName:
      description: Middle Name of the Recipient.
      type: string
      maxLength: 20
      example: Last Name

    ConsentGroupID:
      description: ConsentGroupID provided by Money Network team.
      type: string
      example: 1

    ConsentId:
      description: ConsentId provided by Money Network team.
      type: string
      example: 1

    Accepted:
      description: Accepted.
      type: boolean
      example: true

    CaptureTime:
      description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
      type: string
      format: date-time
      example: "2016-04-16T16:06:05Z"

    IdCheckNumber:
      description: IdCheckNumber provided by Idology.
      type: string
      example: 3010374159

    IdCheckStatus:
      description: Status of the Id check Number.
      type: string
      example: PARTIAL

    RequestDateTime:
      description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
      type: string
      format: date-time
      example: "2016-04-16T16:06:05Z"

    TraceId:
      description: Trace Id for request'
      type: string
      example: "12345212323"

    SessionId:
       description: Session Id generated by the Money Network Team'
       type: string
       example: "2798f857-aa78-40c8-906f-35d88c41feb6"

    ConsentName:
      description: eConsent provided by Money Network.
      type: string
      example: eConsent

    ConsentGroupName:
      description: ConsentGroupName provided by Money Network.
      type: string
      example: Acquisition Consents

    DisplayText:
      description: DisplayText provided by Money Network..
      type: string
      example: Acquisition Consents

    DateOfBirth:
      description: Date of Birth of the recipient. This is mandatory for non-business recipient.
      type: string
      maxLength: 10
      example: 11/11/2011

    SSN:
      description: SSN of the recipient. This is mandatory for Money Network card.
      type: string
      maxLength: 11
      example: 633-55-2345

    UserName:
      description: user id for money netwrok card and user registration. For user registration this should be recipeint registered email address.
      type: string
      maxLength: 12
      example: passw0rd!

    Password:
      description: user password for money netwrok card and user registration.
      type: string
      maxLength: 12
      example: passw0rd!

    AccountNumber:
      description: Account Number of the New Money Network Card
      type: string
      maxLength: 20
      example : 1101040400000404

    CardNumber:
      description: Account Number of the New Money Network Card
      type: string
      maxLength: 20
      example : xxxxxxxxxxxx0388

    ExpDate:
      description: Exp Date of the New Money Network Card
      type: string
      maxLength: 20
      example : 01/31/2024

    RountingNumber:
      description: Rounting  Number of the New Money Network Card
      type: string
      maxLength: 9
      example : 123456789

    HomePhone:
      description: Phone number for the user.
      type: string
      example:
        value: 704-884-2754

    WorkPhone:
      description: Phone number for the user.
      type: string
      example:
        value: 704-884-2754

    IdCheckRequired:
      description: Idology Check flag
      type: boolean
      default: true

    Answer:
      description: Name and Value pair.
      type: string
      example: ALMO

    Source:
      description: Source type
      type: string
      example: PREPAID

    TransactionId:
      description: Transaction Identifier for request
      type: string
      example: "TID-ef28cab9-9b43-40ce-bd1a-0b1ea3027f4e"

#-------------------------------------
# Error Models
#-------------------------------------

    Error:
      description: (Response Only) Model for error messaging
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              description: Detailed information about message format errors.
              type: array
              items:
                properties:
                  field:
                    description: The property or attribute associated with the error
                    type: string
                  message:
                    description: Information specific to a property or attribute.
                    type: string
        hostExtraInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
      example:
        code: "40000"
        message: "Example Error"
        category: "example"
        developerInfo:
          developerMessage: "Invalid Message format in request payload"
          moreInfo: "https://www.example.com/errors/40000"
          fieldError:
            - field: "example id"
              message: "exampleId is mandatory"

#-------------------------------------
# ENUM Models
#-------------------------------------

    AccountType:
      title: AccountType
      description: Indicates the Type of Account.
      type: string
      readOnly: true
      enum:
        - CHECKING
        - SAVINGS

    Status:
      title: Token Status
      description: Indicates the status of the token retured for PCI data.
      type: string
      readOnly: true
      enum:
        - APPROVED
        - DECLINED
        - PENDING
        - CANCELLED
        - ACTIVE
        - INACTIVE

    Requestor:
      description: This is to identify request requestor.
      type: string
      readOnly: false
      enum:
        - MERCHANT
        - RECIPIENT

    FundingSourceType:
      description: Describes the type of Funding source
      type: string
      readOnly: true
      enum:
        - CREDIT
        - DEBIT
        - ACH
        - PREPAID
        - TOKEN
        - VENMO
        - PAYPAL

    TSPID:
      description: A reference id provided to merchant in the response. This is to identtify source of tokenReferenceId. probabile values are define as enum.
      type: number
      enum:
        - 400
        - 501
        - 600
        - 300
        - 111

    TokenProvider:
      title: Specify the list of token providers
      description: Specify the list of token providers.
      type: string
      enum:
        - TRANS_ARMOR
        - NETWORKS
        - SINGLE_USE_TOKEN
        - ENROLMENT_VAULT
#-------------------------------------
# response Models
#-------------------------------------
    NoContent:
      description: The request succeeded but there’s really nothing to show.

    BadRequest:
      description: Bad request
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized

    NotFound:
      description: Not Found - The requested resource doesn't exist.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'

    Conflict:
      description: Conflict - The requested operation conflicts with the current state of the identified resource.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'

    ServerError:
      description: An unexpected server error occured.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'
